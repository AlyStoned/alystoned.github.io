{"version":3,"sources":["redux/store/index.js","renderer.js","api.js","redux/store/store.prod.js","redux/store/store.dev.js","redux/selectors/index.js","components/Preloader.js","storage/auth.js","constants/routes.js","components/PrivateRoute.js","redux/actions/preloader.js","redux/actions/user.js","redux/actions/content.js","components/NavLinks.js","components/Menu.js","components/Page.js","redux/actions/app.js","components/SplitText.js","components/LoginLabel.js","images/preview.png","components/LoginPreview.js","components/LoginForm.js","utils/create_markup.js","utils/reverse.js","components/LoginBottom.js","containers/LoginPage.js","components/MainList.js","components/MainSelected.js","components/EmptyText.js","containers/MainPage.js","redux/actions/players.js","components/LeaderboardLabel.js","components/LeaderboardRow.js","containers/LeaderBoardPage.js","redux/actions/users.js","App.js","reportWebVitals.js","index.js","redux/selectors/user.js","redux/constants/app.js","redux/constants/preloader.js","redux/constants/user.js","redux/constants/users.js","redux/constants/content.js","redux/constants/players.js","redux/reducers/app.js","redux/reducers/preloader.js","redux/reducers/players.js","redux/reducers/content.js","redux/reducers/users.js","redux/reducers/user.js","redux/reducers/index.js","redux/selectors/app.js","redux/selectors/users.js","redux/selectors/content.js","redux/selectors/players.js"],"names":["module","exports","require","renderer","marked","Renderer","link","href","title","text","use","baseURL","axiosAPI","axios","create","timeout","headers","Authorization","accept","urls","content","players","users","formattingContentResponse","data","records","length","fields","enable_selection","login_label","login_text","login_consent","main_selection_rules","main_selected_players","main_empty","leaderboard_label","leaderboard_empty","formattingPlayersResponse","map","card","first_image","id","name","tier","image_url","store","createStore","rootReducer","applyMiddleware","promise","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","strokeColor","Preloader","props","useSelector","state","preloader","show","className","xmlns","viewBox","preserveAspectRatio","cx","cy","r","fill","stroke","strokeWidth","d","transform","attributeName","repeatCount","dur","calcMode","keyTimes","keySplines","values","begin","storeKey","getUser","localStorage","getItem","isAuthenticated","RoutesNames","home","login","leaderboard","PrivateRoute","Component","component","rest","isUserAuthenticated","render","to","pathname","from","location","showPreloader","dispatch","getState","type","ActionTypes","hidePreloader","loadUser","userId","user","response","Promise","resolve","payload","get","createUser","Email","Instagram","post","logoutUser","removeItem","loadContent","isFetching","reject","maxRecords","NavLinks","Menu","children","useState","hideOnScroll","setHideOnScroll","useScrollPosition","prevPos","isShow","currPos","y","Page","useDispatch","appIsInitialized","selectAppIsInitialized","userIsLoading","isLoading","useEffect","a","jobs","push","catch","error","all","fetchData","then","isPageLoaded","navs","defaultProps","SplitText","duration","stagger","wrapper","LoginLabel","x","index","target","targets","offsetLeft","opacity","ease","Quint","easeOut","LoginPreview","delay","easing","Expo","src","preview","alt","composeValidators","validators","value","reduce","validator","undefined","required","emailRegexp","match_email","match","instRegexp","match_inst","WrappedField","input","meta","placeholder","animationDelay","touched","invalid","classes","LoginForm","next","history","useHistory","onSubmit","email","instagram","user_id","action","CREATE_USER_FULFILLED","setItem","handleSubmit","submitting","validate","rotationX","rotationY","rotationZ","disabled","createMarkup","html","__html","trim","LoginBottom","dangerouslySetInnerHTML","LoginPage","SwiperCore","Navigation","Pagination","Lazy","EffectFade","MainList","groups","groupBy","selectedCards","setSelectedCards","tiers","Object","keys","sort","spaceBetween","effect","navigation","nextEl","prevEl","pagination","el","renderBullet","clickable","lazy","sortBy","entries","o","i","group","cards","onClick","handleCardClick","data-src","selectedId","find","event","ids","patch","UPDATE_USER_FULFILLED","filter","MainSelected","player","EmptyText","Sine","MainPage","enableSelection","selectEnableSelection","selectPlayers","hasPlayers","Boolean","isPlayersLoading","selectIsPlayersLoading","userSelection","selectUserSelection","hasSelected","params","operands","filterByFormula","join","LOAD_PLAYERS_FULFILLED","includes","LeaderboardLabel","label","LeaderboardRow","place","score","data-place","toString","replace","rel","toLowerCase","toFixed","LeaderBoardPage","currentUser","selectUser","selectUsers","hasUsers","isUsersLoading","selectIsUsersLoading","field","direction","paramsSerializer","qs","stringify","LOAD_USERS_FULFILLED","userInTopTen","u","App","fallback","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","INIT_APP_SUCCESS","SHOW_PRELOADER","HIDE_PRELOADER","LOAD_USER","LOAD_USER_PENDING","ActionType","Pending","LOAD_USER_FULFILLED","Fulfilled","LOAD_USER_REJECTED","Rejected","CREATE_USER","CREATE_USER_PENDING","CREATE_USER_REJECTED","UPDATE_USER","UPDATE_USER_PENDING","UPDATE_USER_REJECTED","LOGOUT","LOAD_USERS","LOAD_USERS_PENDING","LOAD_USERS_REJECTED","LOAD_CONTENT","LOAD_CONTENT_PENDING","LOAD_CONTENT_FULFILLED","LOAD_CONTENT_REJECTED","LOAD_PLAYERS","LOAD_PLAYERS_PENDING","LOAD_PLAYERS_REJECTED","initialState","isInitialized","combineReducers","app","result"],"mappings":"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","file":"static/js/main.ccd2837f.chunk.js","sourcesContent":["const environment = process.env.NODE_ENV;\r\n\r\nif (environment === 'production') {\r\n  module.exports = require('./store.prod')\r\n} else {\r\n  module.exports = require('./store.dev')\r\n}\r\n","import marked from \"marked\";\r\n\r\n\r\nconst renderer = new marked.Renderer();\r\n\r\n\r\nrenderer.link = (href, title, text) => {\r\n    return `<a class=\"link\" href=${href} target=\"_blank\" rel=\"noreferrer\" title=${title ? title : \"\"}>${text}</a>`;\r\n}\r\n\r\nexport default renderer;\r\n","import axios from \"axios\";\r\nimport marked from \"marked\";\r\n\r\nimport renderer from \"./renderer\";\r\n\r\n\r\nmarked.use({ renderer });\r\n\r\nconst baseID = 'app4ZVTzYjvRelW3e';\r\n\r\nconst baseURL = (() => {\r\n    const environment = process.env.NODE_ENV;\r\n\r\n    switch (environment) {\r\n        case 'test':\r\n            return '';\r\n        default:\r\n            return `https://api.airtable.com/v0/${baseID}/`;\r\n    }\r\n})();\r\n\r\n\r\nexport const axiosAPI = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: \"Bearer keyQcY7BJrFix6otc\",\r\n        \"Content-Type\": \"application/json\",\r\n        accept: \"application/json\",\r\n    },\r\n});\r\n\r\n// 429 status code need retry\r\n// axiosAPI.interceptors.response.use(null, error => {\r\n//     const status = error.status || error.response.status;\r\n//     if (status === 401 || status === 403) {\r\n//         store.dispatch(logoutUser());\r\n//     }\r\n//     return Promise.reject(error);\r\n// });\r\n\r\n\r\nexport const urls = {\r\n    content: 'Content',\r\n    players: 'Players',\r\n    users: 'Users',\r\n};\r\n\r\nexport const formattingContentResponse = (data) => {\r\n    const { records } = data;\r\n    if (!records.length) return\r\n\r\n    const { fields } = records[0];\r\n    return {\r\n        enable_selection: fields[\"enable_selection\"],\r\n        login_label: fields[\"login_label\"],\r\n        login_text: fields[\"login_text\"],\r\n        login_consent: marked(fields[\"login_consent\"]),\r\n        main_selection_rules: fields[\"main_selection_rules\"],\r\n        main_selected_players: fields[\"main_selected_players\"],\r\n        main_empty: marked(fields[\"main_empty\"]),\r\n        leaderboard_label: fields[\"leaderboard_label\"],\r\n        leaderboard_empty: marked(fields[\"leaderboard_empty\"]),\r\n    }\r\n};\r\n\r\nexport const formattingPlayersResponse = (data) => {\r\n    const { records } = data;\r\n    return records.map(card => {\r\n        const { fields } = card;\r\n        const first_image = fields[\"Card\"][0];\r\n        return {\r\n            id: card.id,\r\n            name: fields[\"Name\"],\r\n            tier: fields[\"Tier\"],\r\n            // image_url: first_image.url,\r\n            image_url: first_image['thumbnails']['large']['url'],\r\n            // image_url_mobile: first_image['thumbnails']['large']['url']\r\n        }\r\n    });\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\nimport rootReducer from \"src/redux/reducers\";\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        promise,\r\n        thunk\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\nimport rootReducer from \"src/redux/reducers\";\r\n\r\n\r\nconst composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // options like actionSanitizer, stateSanitizer\r\n        }) : compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            promise,\r\n            thunk\r\n        )\r\n    )\r\n);\r\n\r\nif (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers', () => {\r\n        store.replaceReducer(rootReducer)\r\n    })\r\n}\r\n\r\nexport default store;\r\n","export * from './app';\r\nexport * from './preloader';\r\nexport * from './user';\r\nexport * from './users';\r\nexport * from './content';\r\nexport * from './players';\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst ballColor = '#f47436';\r\nconst strokeColor = '#393939';\r\n\r\nexport const Preloader = (props) => {\r\n    const { show } = useSelector(state => state.preloader);\r\n    return (\r\n        show &&\r\n        <div className=\"preloader__wrapper\">\r\n            <div className=\"preloader\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                     className=\"preloader-ball\"\r\n                     viewBox=\"0 0 100 100\"\r\n                     preserveAspectRatio=\"xMidYMid\">\r\n\r\n                    <circle cx=\"50\" cy=\"50\" r=\"50.25\"\r\n                            fill={ballColor}\r\n                            stroke={strokeColor}\r\n                            strokeWidth=\"4.5\" />\r\n                    <path d=\"M50 0L50 100\"\r\n                          stroke={strokeColor}\r\n                          strokeWidth=\"4\" />\r\n                    <path d=\"M14.644660940672622 14.644660940672622 A50 50 0 0 1 14.644660940672622 85.35533905932738\"\r\n                          fill=\"none\"\r\n                          stroke={strokeColor}\r\n                          strokeWidth=\"4\" />\r\n                    <path d=\"M85.35533905932738 14.644660940672622 A50 50 0 0 0 85.35533905932738 85.35533905932738\"\r\n                          fill=\"none\"\r\n                          stroke={strokeColor}\r\n                          strokeWidth=\"4\" />\r\n\r\n                    <g transform=\"translate(0 50)\">\r\n                        <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\r\n                            <animate attributeName=\"d\"\r\n                                     repeatCount=\"indefinite\"\r\n                                     dur=\"1s\"\r\n                                     calcMode=\"spline\"\r\n                                     keyTimes=\"0;0.499999;0.5;1\"\r\n                                     keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\r\n                                     values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\r\n                                     begin=\"0\" />\r\n                        </path>\r\n                        <path d=\"M0 0A50 50 0 0 1 100 0\" fill=\"none\" stroke={strokeColor} strokeWidth=\"4\">\r\n                            <animate attributeName=\"d\"\r\n                                     repeatCount=\"indefinite\"\r\n                                     dur=\"1s\"\r\n                                     calcMode=\"spline\"\r\n                                     keyTimes=\"0;0.499999;0.5;1\"\r\n                                     keySplines=\"0.1 0 1 0.9;0.5 0.5 0.5 0.5;0 0.1 0.9 1\"\r\n                                     values=\"M0 0A50 50 0 0 1 100 0;M0 0A50 0 0 0 1 100 0;M0 0A50 0 0 0 0 100 0;M0 0A50 50 0 0 0 100 0\"\r\n                                     begin=\"-0.5\" />\r\n                        </path>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","\r\nconst storeKey = 'user_id';\r\n\r\nexport const login = (user_id) => {\r\n    localStorage.setItem(storeKey, user_id);\r\n};\r\n\r\nexport const logout = function() {\r\n    localStorage.removeItem(storeKey);\r\n};\r\n\r\nexport const getUser = () => {\r\n    return localStorage.getItem(storeKey);\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    const user = getUser();\r\n    return !!user;\r\n};\r\n","export const RoutesNames = {\r\n   home: '/',\r\n   login: '/login',\r\n   leaderboard: '/leaderboard'\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated as isUserAuthenticated } from \"src/storage\";\r\nimport { RoutesNames } from \"src/constants\";\r\n\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const isAuthenticated = isUserAuthenticated();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return (\r\n                    !isAuthenticated ? (\r\n                        <Redirect to={{\r\n                            pathname: RoutesNames.login,\r\n                            state: { from: props.location }\r\n                        }}/>\r\n                    ) : <Component {...props}/>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    component: PropTypes.elementType.isRequired,\r\n    redirect: PropTypes.string,\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\n\r\nexport const showPreloader = () => (dispatch, getState) => {\r\n    const { show } = getState().preloader;\r\n\r\n    if (show) {\r\n        return null\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.SHOW_PRELOADER\r\n    })\r\n};\r\n\r\nexport const hidePreloader = () => (dispatch, getState) => {\r\n    const { show } = getState().preloader;\r\n\r\n    if (!show) {\r\n        return null\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.HIDE_PRELOADER\r\n    })\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\nimport { getUser, logout } from \"src/storage\";\r\nimport { axiosAPI, urls } from \"src/api\";\r\n\r\n\r\nexport const loadUser = (userId) => (dispatch, getState) => {\r\n    const state = getState();\r\n    const user = state.user.response;\r\n\r\n    if (user) {\r\n        return Promise.resolve(user)\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_USER,\r\n        payload: axiosAPI.get(`${urls.users}/${userId}`)\r\n    });\r\n};\r\n\r\nexport const createUser = (Email, Instagram) => dispatch => {\r\n    const user = getUser();\r\n\r\n    if (user) {\r\n        return Promise.resolve(user)\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.CREATE_USER,\r\n        payload: axiosAPI.post(urls.users, {\r\n            fields: { Email, Instagram }\r\n        })\r\n    });\r\n};\r\n\r\nexport const updateUser = (fields) => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.user.isLoading) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    const user = getUser();\r\n    if (!user) {\r\n        return Promise.reject(null);\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.UPDATE_USER,\r\n        payload: axiosAPI.patch(`${urls.users}/${user}`, {\r\n            fields\r\n        }),\r\n        // meta: {\r\n        //     ids: selected_ids\r\n        // }\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    logout();\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOGOUT\r\n    });\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\nimport { axiosAPI, urls } from \"src/api\";\r\n\r\n\r\nexport const loadContent = () => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.content.isFetching) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_CONTENT,\r\n        payload: axiosAPI.get(urls.content, {\r\n            maxRecords: 1\r\n        })\r\n    });\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { RoutesNames } from \"src/constants\";\r\n\r\n\r\nexport const NavLinks = ({ isAuthenticated, pathname }) => {\r\n    switch (pathname) {\r\n        case RoutesNames.login:\r\n            return <Link to={RoutesNames.leaderboard}>Leaderboard</Link>\r\n        case RoutesNames.home:\r\n            return isAuthenticated ?\r\n                <Link to={RoutesNames.leaderboard}>Leaderboard</Link>\r\n                :\r\n                null\r\n        case RoutesNames.leaderboard:\r\n            return isAuthenticated ?\r\n                <Link to={RoutesNames.home}>Home</Link>\r\n                :\r\n                <Link to={RoutesNames.login}>Login</Link>\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nNavLinks.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    pathname: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\r\n\r\n\r\nexport const Menu = ({ children }) => {\r\n    const [hideOnScroll, setHideOnScroll] = useState(true);\r\n\r\n    useScrollPosition(\r\n        ({ prevPos, currPos }) => {\r\n            const isShow = currPos.y > prevPos.y\r\n            if (isShow !== hideOnScroll) setHideOnScroll(isShow);\r\n        },\r\n        [hideOnScroll]\r\n    )\r\n\r\n    return (\r\n        <div className={hideOnScroll ? \"menu show\" : \"menu\"}>\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nMenu.propTypes = {\r\n    children: PropTypes.element.isRequired\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    showPreloader,\r\n    hidePreloader,\r\n    loadContent,\r\n    loadUser,\r\n    logoutUser,\r\n    initAppSuccess\r\n} from \"src/redux/actions\";\r\nimport { selectAppIsInitialized } from \"src/redux/selectors\";\r\nimport { getUser, isAuthenticated as isUserAuthenticated } from \"src/storage\";\r\nimport { NavLinks } from \"src/components/NavLinks\";\r\nimport { Menu } from \"src/components/Menu\";\r\n\r\n\r\nexport const Page = (props) => {\r\n    const dispatch = useDispatch();\r\n    const content = useSelector(state => state.content);\r\n    const appIsInitialized = useSelector(selectAppIsInitialized);\r\n    const { isLoading: userIsLoading } = useSelector(state => state.user);\r\n    const isAuthenticated = isUserAuthenticated();\r\n    const isLoading = content.isLoading || userIsLoading;\r\n\r\n    useEffect(() => {\r\n        if (appIsInitialized) return;\r\n\r\n        async function fetchData() {\r\n            let jobs = [];\r\n\r\n            if (!content.response) {\r\n                dispatch(showPreloader());\r\n                jobs.push(dispatch(loadContent()));\r\n            }\r\n\r\n            // load user if exists in LS\r\n            if (isAuthenticated) {\r\n                jobs.push(dispatch(\r\n                    loadUser(getUser())\r\n                ).catch(\r\n                    (error) => {\r\n                        // if the user has been removed from airtable\r\n                        dispatch(logoutUser());\r\n                    }\r\n                ));\r\n            }\r\n\r\n            return await Promise.all(jobs);\r\n        }\r\n\r\n        fetchData().then((data) => {\r\n            dispatch(initAppSuccess());\r\n\r\n            if (props.isPageLoaded) {\r\n                dispatch(hidePreloader());\r\n            }\r\n        });\r\n    }, [appIsInitialized]);\r\n\r\n    const navs = <NavLinks isAuthenticated={isAuthenticated} pathname={props.pathname} />;\r\n\r\n    return (\r\n        <div id=\"app-page\">\r\n            <main id=\"app-main\" className={props.className}>\r\n                {isLoading || !content.response ? null : props.children}\r\n\r\n                {navs && <Menu children={navs} />}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nPage.propTypes = {\r\n    pathname: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n    className: PropTypes.string,\r\n    isPageLoaded: PropTypes.bool\r\n};\r\n\r\nPage.defaultProps = {\r\n  isPageLoaded: true\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\n\r\nexport const initAppSuccess = () => (dispatch, getState) => {\r\n    return dispatch({\r\n        type: ActionTypes.INIT_APP_SUCCESS\r\n    })\r\n};\r\n","import React from \"react\";\r\nimport { Tween, SplitChars } from 'react-gsap';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport const SplitText = ({ text, duration, stagger, from }) => {\r\n    return (\r\n        <div className=\"letters\">\r\n            <Tween\r\n                from={from}\r\n                duration={duration}\r\n                stagger={stagger}\r\n            >\r\n                <SplitChars\r\n                    wrapper={<div className=\"letter\" />}\r\n                >\r\n                    {text}\r\n                </SplitChars>\r\n            </Tween>\r\n        </div>\r\n    )\r\n};\r\n\r\nSplitText.propTypes = {\r\n    text: PropTypes.string,\r\n    duration: PropTypes.number,\r\n    stagger: PropTypes.number,\r\n    from: PropTypes.object,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Quint } from 'gsap';\r\n\r\nimport { SplitText } from \"./SplitText\";\r\n\r\n\r\nexport const LoginLabel = () => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <div className=\"head-label-wrapper\">\r\n            <div className=\"container\">\r\n                <div className=\"head-label center-text\">\r\n                    <SplitText\r\n                        text={content.login_label}\r\n                        duration={0.65}\r\n                        stagger={0.05}\r\n                        from={{\r\n                            x: function(index, target, targets) {\r\n                                return -1 * target.offsetLeft;\r\n                            },\r\n                            opacity: 0,\r\n                            ease: Quint.easeOut\r\n                        }}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/preview.3649143e.png\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Expo } from 'gsap';\r\nimport { Tween } from 'react-gsap';\r\n\r\nimport preview from \"src/images/preview.png\";\r\n\r\n\r\nconst delay = 0.7;\r\n\r\nexport const LoginPreview = () => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <div className=\"login-preview-wrapper\">\r\n            <Tween\r\n                from={{\r\n                    opacity: 0,\r\n                    delay: delay,\r\n                    easing: Expo.easeOut\r\n                }}\r\n                duration={1.2}\r\n            >\r\n                <div className=\"login-preview\">\r\n                    <img className=\"login-preview-img\"\r\n                         src={preview}\r\n                         alt=\"preview\"/>\r\n                </div>\r\n            </Tween>\r\n\r\n            <Tween\r\n                from={{\r\n                    opacity: 0,\r\n                    delay: delay + 0.2\r\n                }}\r\n                duration={1.2}\r\n            >\r\n                <div className=\"login-preview-label center-text\">\r\n                    {content.login_text}\r\n                </div>\r\n            </Tween>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tween } from 'react-gsap';\r\n\r\nimport { CREATE_USER_FULFILLED } from \"src/redux/constants\";\r\n// import ErrorWithDelay from \"./ErrorWithDelay\";\r\nimport { createUser, showPreloader } from \"src/redux/actions\";\r\nimport { login } from \"src/storage\";\r\n// import { fetchUser } from \"src/api\";\r\n\r\n\r\n// validation\r\nconst composeValidators = (...validators) => value =>\r\n    validators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nconst required = value => (value ? undefined : \"Required\");\r\n\r\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/igm;\r\nconst match_email = value => (\r\n    value.match(emailRegexp) ? undefined : 'Email does not match validation scheme \"my@mail.com\"'\r\n);\r\n\r\nconst instRegexp = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/igm;\r\nconst match_inst = value => (\r\n    value.match(instRegexp) ? undefined : \"Your name Instagram is incorrect\"\r\n);\r\n\r\n// const phoneRegexp = /\\(?([0-9]{3})\\)?([ .-])?([0-9]{3})([ .-])?([0-9]{4})/g;\r\n// const match_phone = value => (\r\n//     value.match(phoneRegexp) ? undefined : \"Phone does not match validation scheme (999) 999-9999\"\r\n// );\r\n\r\n// parse\r\n// const normalizePhone = value => {\r\n//     if (!value) return value;\r\n//     const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n//     if (onlyNums.length <= 3) return onlyNums;\r\n//     if (onlyNums.length <= 7)\r\n//         return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 7)}`;\r\n//     return `(${onlyNums.slice(0, 3)}) ${onlyNums.slice(3, 6)}-${onlyNums.slice(6, 10)}`;\r\n// };\r\n\r\n// formatter\r\n//\r\n\r\n// animations\r\nconst delay = 1.2;\r\n\r\nconst WrappedField = ({ input, meta, placeholder, animationDelay }) => {\r\n    const name = input.name;\r\n    const { touched, error } = meta;\r\n    const invalid = error && touched;\r\n    let classes = `field field-${name}`;\r\n    if (invalid) classes += ' invalid';\r\n\r\n    return (\r\n        <Tween\r\n            from={{\r\n                opacity: 0,\r\n                x: -270,\r\n                delay: delay + animationDelay,\r\n            }}\r\n            duration={0.8}\r\n            ease=\"elastic.out(0.2, 0.1)\"\r\n        >\r\n            <div className={classes}>\r\n                <div className=\"control\">\r\n                    <input {...input} type=\"text\" placeholder={placeholder} />\r\n                    {invalid && <div className=\"error\"><span>{error}</span></div>}\r\n                    {/*<ErrorWithDelay name={name} delay={3000}>*/}\r\n                    {/*{error => <div className=\"error\"><span>{error}</span></div>}*/}\r\n                    {/*</ErrorWithDelay>*/}\r\n                </div>\r\n            </div>\r\n        </Tween>\r\n    )\r\n};\r\n\r\nWrappedField.propTypes = {\r\n    input: PropTypes.object,\r\n    meta: PropTypes.object\r\n};\r\n\r\n\r\nexport const LoginForm = ({ next }) => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const onSubmit = async values => {\r\n        dispatch(showPreloader());\r\n\r\n        // trying fetch user\r\n        // try {\r\n        //     const response = await fetchUser(\r\n        //         values.email, values.instagram\r\n        //     );\r\n        //     if (response.data.data.length) {\r\n        //         login(values);\r\n        //         history.push(next);\r\n        //         return Promise.resolve();\r\n        //     }\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n\r\n        // if no user, create it\r\n        return dispatch(createUser(\r\n            values.email, values.instagram\r\n        )).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === CREATE_USER_FULFILLED) {\r\n                    login(value.data.id);\r\n                    history.push(next);\r\n                }\r\n            }, (error) => {});\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            render={({ handleSubmit, submitting, values }) => (\r\n                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-fields\">\r\n                        <Field name=\"email\"\r\n                               placeholder=\"Email\"\r\n                               animationDelay={0}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_email)} />\r\n                        <Field name=\"instagram\"\r\n                               placeholder=\"Instagram\"\r\n                               animationDelay={0.1}\r\n                               component={WrappedField}\r\n                               validate={composeValidators(required, match_inst)} />\r\n                        {/*<Field name=\"phone\"*/}\r\n                        {/*       placeholder=\"(999) 999-9999\"*/}\r\n                        {/*       animationDelay={0.2}*/}\r\n                        {/*       component={WrappedField}*/}\r\n                        {/*       validate={composeValidators(required, match_phone)}*/}\r\n                        {/*       parse={normalizePhone} />*/}\r\n                    </div>\r\n\r\n                    <div className=\"form-btn-wrap center-text\">\r\n                        <Tween\r\n                            from={{\r\n                                opacity: 0,\r\n                                x: 270,\r\n                                rotationX: -180,\r\n                                rotationY: -210,\r\n                                rotationZ: -90,\r\n                                delay: delay + 0.1\r\n                            }}\r\n                            duration={0.8}\r\n                            ease=\"elastic.out(0.2, 0.1)\"\r\n                        >\r\n                            <button type=\"submit\" disabled={submitting} className=\"btn btn-green\">\r\n                                <span className=\"btn-text\">{\"play\"}</span>\r\n                            </button>\r\n                        </Tween>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n};\r\n\r\nLoginForm.propTypes = {\r\n    next: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.object\r\n    ])\r\n};\r\n","export function createMarkup(html) {\r\n  return ({ __html: html.trim() })\r\n}\r\n","import { generatePath } from \"react-router\";\r\nimport { RoutesNames } from \"src/constants\";\r\n\r\nexport const reverse = (name, params) => {\r\n    return generatePath(RoutesNames[name], params)\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Expo } from \"gsap\";\r\nimport { Tween } from 'react-gsap';\r\n\r\nimport { createMarkup } from \"src/utils\";\r\n\r\n\r\nconst delay = 1.4;\r\n\r\nexport const LoginBottom = () => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <div className=\"login-bottom-wrapper\">\r\n            <Tween\r\n                from={{\r\n                    opacity: 0,\r\n                    delay: delay,\r\n                    easing: Expo.easeOut\r\n                }}\r\n                duration={0.8}\r\n            >\r\n                <div className=\"login-consent center-text\"\r\n                     dangerouslySetInnerHTML={createMarkup(content.login_consent)} />\r\n            </Tween>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Page } from \"src/components/Page\";\r\nimport { LoginLabel } from \"src/components/LoginLabel\";\r\nimport { LoginPreview } from \"src/components/LoginPreview\";\r\nimport { LoginForm } from \"src/components/LoginForm\";\r\nimport { LoginBottom } from \"src/components/LoginBottom\";\r\nimport { isAuthenticated } from \"src/storage\";\r\nimport { RoutesNames } from \"src/constants\";\r\n\r\n\r\nexport const LoginPage = (props) => {\r\n    const { from: { pathname: next = RoutesNames.home } = {} } = props.location.state || {};\r\n\r\n    return (\r\n        isAuthenticated() ?\r\n            <Redirect to={next}/>\r\n            :\r\n            <Page pathname={props.location.pathname} className=\"login-page\">\r\n                <>\r\n                    <LoginLabel />\r\n\r\n                    <div className=\"login-form-wrapper\">\r\n                        <div className=\"container\">\r\n                            <LoginPreview />\r\n                            <LoginForm next={next} />\r\n                            <LoginBottom />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </Page>\r\n    )\r\n};\r\n\r\nLoginPage.propTypes = {\r\n    location: PropTypes.object.isRequired\r\n};\r\n","import find from 'lodash/find';\r\nimport sortBy from 'lodash/sortBy';\r\nimport groupBy from 'lodash/groupBy';\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tween } from 'react-gsap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SwiperCore, { Navigation, Pagination, Lazy, EffectFade } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport { UPDATE_USER_FULFILLED } from \"src/redux/constants\";\r\nimport { showPreloader, hidePreloader, updateUser } from \"src/redux/actions\";\r\n\r\n\r\nSwiperCore.use([Navigation, Pagination, Lazy, EffectFade]);\r\n\r\n\r\nexport const MainList = ({ players }) => {\r\n    const dispatch = useDispatch();\r\n    const content = useSelector(state => state.content);\r\n    const groups = groupBy(players, 'tier');\r\n\r\n    const [selectedCards, setSelectedCards] = useState({});\r\n    const isTierSelected = (tier) => selectedCards[tier];\r\n\r\n    const tiers = Object.keys(groups).sort();\r\n    const isFullSet = () => tiers.filter(group => selectedCards[group]).length === tiers.length;\r\n\r\n    const handleCardClick = (group, id) => {\r\n        if (selectedCards[group] === id) {\r\n            setSelectedCards({\r\n                ...selectedCards,\r\n                [group]: undefined\r\n            });\r\n            return\r\n        }\r\n\r\n        setSelectedCards({\r\n            ...selectedCards,\r\n            [group]: id\r\n        });\r\n    };\r\n\r\n    const handleSubmitClick = (event) => {\r\n        dispatch(showPreloader());\r\n\r\n        const ids = tiers.map(group => selectedCards[group]);\r\n        dispatch(updateUser({\r\n            'Selected Players': ids\r\n        })).then(\r\n            ({value, action}) => {\r\n                if (action && action.type === UPDATE_USER_FULFILLED) {\r\n                    dispatch(hidePreloader());\r\n                }\r\n            }, (error) => {});\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top text-block\">\r\n                <Tween\r\n                    from={{\r\n                        opacity: 0\r\n                    }}\r\n                    duration={1.2}\r\n                >\r\n                    <div className=\"top-label\">\r\n                        {content.main_selection_rules}\r\n                    </div>\r\n                </Tween>\r\n            </div>\r\n\r\n            <Swiper\r\n                spaceBetween={40}\r\n                effect=\"fade\"\r\n                // fadeEffect={{ crossFade: true }}\r\n                navigation={{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                }}\r\n                pagination={{\r\n                    el: '.swiper-pagination',\r\n                    renderBullet: function (index, className) {\r\n                        return `<div class=\"${className}\">\r\n                                  ${index + 1}\r\n                                </div>`;\r\n                    },\r\n                    clickable: true\r\n                }}\r\n                lazy\r\n            >\r\n                {sortBy(Object.entries(groups), [o => o[0]]).map(([group, cards], i) => {\r\n                    return (\r\n                        <SwiperSlide key={group}>\r\n                            <div className=\"tier\" />\r\n                            <div className=\"list\">\r\n                                {cards.map((card, i) => {\r\n                                    let classes = 'card';\r\n                                    if (selectedCards[group] === card.id) classes += ' selected';\r\n                                    else if (isTierSelected(group)) classes += ' skipped';\r\n\r\n                                    return (\r\n                                        <div className=\"list-item\" key={card.id}>\r\n                                            <div className={classes} onClick={() => handleCardClick(group, card.id)}>\r\n                                                <div className=\"card-image-wrapper\">\r\n                                                    <img className=\"card-image swiper-lazy\"\r\n                                                         data-src={card.image_url}\r\n                                                         alt={card.name} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                })}\r\n            </Swiper>\r\n\r\n            <div className=\"swiper-ui\">\r\n                <div className=\"swiper-navigation\">\r\n                    <div className=\"swiper-button-prev\" />\r\n                    <div className=\"swiper-button-next\" />\r\n                </div>\r\n\r\n                <div className=\"swiper-pagination\" />\r\n            </div>\r\n\r\n            <div className=\"bottom text-block\">\r\n                <div className=\"list list-thumbs\">\r\n                    {tiers.map((tier, i) => {\r\n                        const selectedId = selectedCards[tier];\r\n                        const card = find(groups[tier], { id: selectedId });\r\n\r\n                        return (\r\n                            <div className=\"thumb-list-item\" key={tier}>\r\n                                <div className=\"thumb-list-item-tier\">{i + 1}</div>\r\n\r\n                                {card ?\r\n                                    <div className=\"card thumb-list-item-card\">\r\n                                        <div className=\"card-image-wrapper\">\r\n                                            <img className=\"card-image\"\r\n                                                 src={card.image_url}\r\n                                                 alt={card.name} />\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"thumb-list-item-placeholder\" />}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <Tween\r\n                    from={{\r\n                        opacity: 0,\r\n                        x: 270,\r\n                        rotationX: -180,\r\n                        rotationY: -210,\r\n                        rotationZ: -90,\r\n                        delay: 0.4\r\n                    }}\r\n                    duration={0.8}\r\n                    ease=\"elastic.out(0.2, 0.1)\"\r\n                >\r\n                    <button type=\"button\"\r\n                            className=\"btn btn-green\"\r\n                            onClick={handleSubmitClick}\r\n                            disabled={!isFullSet()}>\r\n                        <span className=\"btn-text\">{\"submit\"}</span>\r\n                    </button>\r\n                </Tween>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nMainList.propTypes = {\r\n    players: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tween } from \"react-gsap\";\r\n\r\n\r\nexport const MainSelected = ({ players }) => {\r\n    const content = useSelector(state => state.content);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top text-block\">\r\n                <Tween\r\n                    from={{\r\n                        opacity: 0\r\n                    }}\r\n                    duration={1.2}\r\n                >\r\n                    <div className=\"top-label\">\r\n                        {content.main_selected_players}\r\n                    </div>\r\n                </Tween>\r\n            </div>\r\n\r\n            <div className=\"list selected-list\">\r\n                <Tween\r\n                    from={{\r\n                        opacity: 0\r\n                    }}\r\n                    stagger={0.2}\r\n                >\r\n                    {players.map((player, i) => {\r\n                        return (\r\n                            <div className=\"list-item selected-list-item\" key={player.id}>\r\n                                <div className=\"selected-list-item-tier\">{player.tier}</div>\r\n                                <div className=\"card selected-list-item-card\">\r\n                                    <div className=\"card-image-wrapper\">\r\n                                        <img className=\"card-image\"\r\n                                             src={player.image_url}\r\n                                             alt={player.name} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Tween>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nMainSelected.propTypes = {\r\n    players: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Sine } from \"gsap\";\r\nimport { Tween } from 'react-gsap';\r\n\r\nimport { createMarkup } from \"src/utils\";\r\n\r\n\r\nexport const EmptyText = ({ text }) => {\r\n    return (\r\n        <Tween\r\n            from={{\r\n                opacity: 0,\r\n                y: 220,\r\n                easing: Sine.easeOut\r\n            }}\r\n            duration={0.8}\r\n        >\r\n            <div className=\"empty-label text-markdown\"\r\n                 dangerouslySetInnerHTML={createMarkup(text)} />\r\n        </Tween>\r\n    )\r\n};\r\n","import sortBy from 'lodash/sortBy';\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Page } from \"src/components/Page\";\r\nimport { MainList } from \"src/components/MainList\";\r\nimport { MainSelected } from \"src/components/MainSelected\";\r\nimport { EmptyText } from \"src/components/EmptyText\";\r\nimport { showPreloader, hidePreloader, loadPlayers } from \"src/redux/actions\";\r\nimport { LOAD_PLAYERS_FULFILLED } from \"src/redux/constants\";\r\nimport {\r\n    selectAppIsInitialized,\r\n    selectIsPlayersLoading,\r\n    selectEnableSelection,\r\n    selectUserSelection,\r\n    selectPlayers\r\n} from \"src/redux/selectors\";\r\n\r\n\r\nexport const MainPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const content = useSelector(state => state.content);\r\n    const enableSelection = useSelector(selectEnableSelection);\r\n    const appIsInitialized = useSelector(selectAppIsInitialized);\r\n\r\n    const players = useSelector(selectPlayers);\r\n    const hasPlayers = Boolean(players.length);\r\n    const { isPlayersLoading } = useSelector(selectIsPlayersLoading);\r\n\r\n    const userSelection = useSelector(selectUserSelection);\r\n    const hasSelected = userSelection && Boolean(userSelection.length);\r\n\r\n    useEffect(() => {\r\n        if (!appIsInitialized || (!hasSelected && !enableSelection)) return;\r\n\r\n        if (!hasPlayers) {\r\n            dispatch(showPreloader());\r\n            dispatch(\r\n                loadPlayers(userSelection)\r\n            ).then(\r\n                ({ value, action }) => {\r\n                    if (action && action.type === LOAD_PLAYERS_FULFILLED) {\r\n                        dispatch(hidePreloader());\r\n                    }\r\n                }, (error) => {}\r\n            );\r\n        }\r\n    }, [appIsInitialized]);\r\n\r\n    return (\r\n        <Page pathname={props.location.pathname}\r\n              className=\"main-page\"\r\n              isPageLoaded={hasPlayers || !enableSelection}\r\n        >\r\n            <div className=\"container\">\r\n                {enableSelection || hasSelected ?\r\n                    ((hasPlayers && !isPlayersLoading) && (\r\n                        hasSelected ?\r\n                            <MainSelected players={sortBy(players.filter(player => userSelection.includes(player.id)),\r\n                                                         'tier')} />\r\n                            :\r\n                            <MainList players={players} />\r\n                    ))\r\n                    :\r\n                    <EmptyText text={content.main_empty} />}\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\nimport { axiosAPI, urls } from \"src/api\";\r\n\r\n\r\nexport const loadPlayers = (ids) => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.players.isLoading) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    const params = {};\r\n\r\n    if (ids && ids.length) {\r\n        const operands = ids.map(value => `RECORD_ID()='${value}'`);\r\n        params.filterByFormula = `OR(${operands.join(',')})`;\r\n        params.maxRecords = ids.length;\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_PLAYERS,\r\n        payload: axiosAPI.get(urls.players, {\r\n            params\r\n        })\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { Quint } from 'gsap';\r\n\r\nimport { SplitText } from \"./SplitText\";\r\n\r\n\r\nexport const LeaderboardLabel = ({ label }) => {\r\n    return (\r\n        <div className=\"leaderboard-label\">\r\n            <SplitText\r\n                text={label}\r\n                duration={0.65}\r\n                stagger={0.05}\r\n                from={{\r\n                    x: function(index, target, targets) {\r\n                        return -1 * target.offsetLeft;\r\n                    },\r\n                    opacity: 0,\r\n                    ease: Quint.easeOut\r\n                }}/>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\n\r\n\r\nfunction numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport const LeaderboardRow = ({ user, className }) => {\r\n    const {\r\n        \"Place\": place,\r\n        \"Instagram\": instagram,\r\n        \"Summary Score\": score\r\n    } = user.fields;\r\n\r\n    return (\r\n        <div className={`leaderboard-row ${className}`}>\r\n            <div className={place.length > 2 ? \"leaderboard-place leaderboard-place-big\" : \"leaderboard-place\"}\r\n                 data-place={numberWithCommas(place)} />\r\n\r\n            <div className=\"leaderboard-instagram\">\r\n                <a target=\"_blank\"\r\n                   rel=\"noreferrer\"\r\n                   title={`@${instagram.toLowerCase()}`}\r\n                   href={`https://www.instagram.com/${instagram.toLowerCase()}/`}>\r\n                    {\"@\"}{instagram}\r\n                </a>\r\n            </div>\r\n\r\n            <div className=\"leaderboard-score\">\r\n                {score.toFixed(1)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Page } from \"src/components/Page\";\r\nimport { LeaderboardLabel } from \"src/components/LeaderboardLabel\";\r\nimport { LeaderboardRow } from \"src/components/LeaderboardRow\";\r\nimport { EmptyText } from \"src/components/EmptyText\";\r\nimport { showPreloader, hidePreloader, loadUsers } from \"src/redux/actions\";\r\nimport {\r\n    selectAppIsInitialized,\r\n    selectIsUsersLoading,\r\n    selectUsers,\r\n    selectUser,\r\n    selectUserSelection\r\n} from \"src/redux/selectors\";\r\nimport { LOAD_USERS_FULFILLED } from \"src/redux/constants\";\r\n\r\n\r\nexport const LeaderBoardPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const content = useSelector(state => state.content);\r\n    const appIsInitialized = useSelector(selectAppIsInitialized);\r\n\r\n    const currentUser = useSelector(selectUser);\r\n    const users = useSelector(selectUsers);\r\n    const hasUsers = Boolean(users.length);\r\n    const { isUsersLoading } = useSelector(selectIsUsersLoading);\r\n    const userSelection = useSelector(selectUserSelection);\r\n    const hasSelected = userSelection && Boolean(userSelection.length);\r\n\r\n    useEffect(() => {\r\n        if (!appIsInitialized || isUsersLoading) return;\r\n\r\n        dispatch(showPreloader());\r\n        dispatch(\r\n            loadUsers({\r\n                filterByFormula: \"NOT(OR(_has_place=''))\",\r\n                sort: [{\r\n                    field: \"Place\",\r\n                    // field: 'Summary Score',\r\n                    direction: 'asc'\r\n                }],\r\n                maxRecords: 10\r\n            })\r\n        ).then(\r\n            ({ value, action }) => {\r\n                if (action && action.type === LOAD_USERS_FULFILLED) {\r\n                    dispatch(hidePreloader());\r\n                }\r\n            }, (error) => {}\r\n        );\r\n    }, [appIsInitialized]);\r\n\r\n    const userInTopTen = Boolean(currentUser) && users.map(u => u.id).includes(currentUser.id);\r\n\r\n    return (\r\n        <Page pathname={props.location.pathname}\r\n              className=\"leaderboard-page\"\r\n              isPageLoaded={false}\r\n        >\r\n            <div className=\"container\">\r\n                {hasUsers ?\r\n                    <>\r\n                        <LeaderboardLabel label={content.leaderboard_label} />\r\n\r\n                        <div className=\"leaderboard-table\">\r\n                            {(hasSelected && !userInTopTen) &&\r\n                            <LeaderboardRow key={currentUser.id}\r\n                                            className={\"single current\"}\r\n                                            user={currentUser}\r\n                            />}\r\n\r\n                            {users.map((user, i) =>\r\n                                <LeaderboardRow\r\n                                    key={user.id}\r\n                                    className={(userInTopTen && currentUser.id === user.id) ? \"current\" : \"\"}\r\n                                    user={user}\r\n                                />)}\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    isUsersLoading ? null : <EmptyText text={content.leaderboard_empty} />\r\n                }\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n","import qs from 'qs';\r\nimport * as ActionTypes from \"src/redux/constants\";\r\nimport { axiosAPI, urls } from \"src/api\";\r\n\r\n\r\nexport const loadUsers = (params) => (dispatch, getState) => {\r\n    const state = getState();\r\n    if (state.users.isLoading) {\r\n        return Promise.reject(null)\r\n    }\r\n\r\n    return dispatch({\r\n        type: ActionTypes.LOAD_USERS,\r\n        payload: axiosAPI.get(urls.users, {\r\n            params,\r\n            paramsSerializer: params => {\r\n                return qs.stringify(params)\r\n            }\r\n        })\r\n    });\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport store from \"src/redux/store\";\r\nimport { Preloader } from \"src/components/Preloader\";\r\nimport { PrivateRoute } from \"src/components/PrivateRoute\";\r\nimport { MainPage, LoginPage, LeaderBoardPage } from \"src/containers\";\r\nimport { RoutesNames } from \"src/constants\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Suspense fallback={<Preloader />}>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <PrivateRoute\r\n                            exact\r\n                            path={RoutesNames.home}\r\n                            component={MainPage}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={RoutesNames.login}\r\n                            render={LoginPage}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={RoutesNames.leaderboard}\r\n                            render={(props) => <LeaderBoardPage {...props} />}\r\n                        />\r\n                        <Route\r\n                            path=\"*\">\r\n                            <Redirect to={RoutesNames.home} />\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n                <Preloader />\r\n            </Provider>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport \"src/css/vendor/normalize.css\";\r\nimport \"src/css/root.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const selectUser = state => state.user.response;\r\nexport const selectUserSelection = state => state.user.response && state.user.response.fields[\"Selected Players\"];\r\n","export const INIT_APP_SUCCESS = 'INIT_APP_SUCCESS';","export const SHOW_PRELOADER = 'SHOW_PRELOADER';\r\nexport const HIDE_PRELOADER = 'HIDE_PRELOADER';\r\n","import { ActionType } from 'redux-promise-middleware';\r\n\r\nexport const LOAD_USER = 'LOAD_USER';\r\nexport const LOAD_USER_PENDING = `LOAD_USER_${ActionType.Pending}`;\r\nexport const LOAD_USER_FULFILLED = `LOAD_USER_${ActionType.Fulfilled}`;\r\nexport const LOAD_USER_REJECTED = `LOAD_USER_${ActionType.Rejected}`;\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const CREATE_USER_PENDING = `CREATE_USER_${ActionType.Pending}`;\r\nexport const CREATE_USER_FULFILLED = `CREATE_USER_${ActionType.Fulfilled}`;\r\nexport const CREATE_USER_REJECTED = `CREATE_USER_${ActionType.Rejected}`;\r\n\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const UPDATE_USER_PENDING = `UPDATE_USER_${ActionType.Pending}`;\r\nexport const UPDATE_USER_FULFILLED = `UPDATE_USER_${ActionType.Fulfilled}`;\r\nexport const UPDATE_USER_REJECTED = `UPDATE_USER_${ActionType.Rejected}`;\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\n","import { ActionType } from 'redux-promise-middleware';\r\n\r\nexport const LOAD_USERS = 'LOAD_USERS';\r\nexport const LOAD_USERS_PENDING = `LOAD_USERS_${ActionType.Pending}`;\r\nexport const LOAD_USERS_FULFILLED = `LOAD_USERS_${ActionType.Fulfilled}`;\r\nexport const LOAD_USERS_REJECTED = `LOAD_USERS_${ActionType.Rejected}`;\r\n","import { ActionType } from 'redux-promise-middleware';\r\n\r\n\r\nexport const LOAD_CONTENT = 'LOAD_CONTENT';\r\nexport const LOAD_CONTENT_PENDING = `LOAD_CONTENT_${ActionType.Pending}`;\r\nexport const LOAD_CONTENT_FULFILLED = `LOAD_CONTENT_${ActionType.Fulfilled}`;\r\nexport const LOAD_CONTENT_REJECTED = `LOAD_CONTENT_${ActionType.Rejected}`;\r\n","import { ActionType } from 'redux-promise-middleware';\r\n\r\nexport const LOAD_PLAYERS = 'LOAD_PLAYERS';\r\nexport const LOAD_PLAYERS_PENDING = `LOAD_PLAYERS_${ActionType.Pending}`;\r\nexport const LOAD_PLAYERS_FULFILLED = `LOAD_PLAYERS_${ActionType.Fulfilled}`;\r\nexport const LOAD_PLAYERS_REJECTED = `LOAD_PLAYERS_${ActionType.Rejected}`;\r\n","import * as ActionTypes from \"src/redux/constants\";\r\n\r\n\r\nconst initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.INIT_APP_SUCCESS:\r\n            return {\r\n                isInitialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\n\r\n\r\nconst initialState = {\r\n    show: false\r\n};\r\n\r\nexport const preloaderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SHOW_PRELOADER:\r\n            return { show: true };\r\n\r\n        case ActionTypes.HIDE_PRELOADER:\r\n            return { show: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\nimport { formattingPlayersResponse } from \"src/api\";\r\n\r\n\r\nconst initialState = {\r\n    players: [],\r\n    isLoading: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nexport const playersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_PLAYERS_PENDING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case ActionTypes.LOAD_PLAYERS_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_PLAYERS_FULFILLED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                players: formattingPlayersResponse(action.payload.data),\r\n                response: action.payload.data,\r\n                error: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\nimport { formattingContentResponse } from \"src/api\";\r\n\r\n\r\nconst initialState = {\r\n    enable_selection: false,\r\n    login_label: 'frank michael smith\\'s',\r\n    login_text: 'Choose 1 player from each tier. The team with the most total points scored through the whole tournament wins!',\r\n    login_consent: 'By participating, you consent to receive recurring autodialed SMS/MMS promotional messages. No purchase required. Msg&data rates may apply. Reply HELP for help, or STOP to end.',\r\n    main_selection_rules: 'Choose 1 player from each tier. The team with the most total points scored through the whole tournament wins!',\r\n    main_selected_players: 'Thanks for entering.',\r\n    main_empty: 'Contest 38 is closed! Must be following Frank & SBD',\r\n    leaderboard_label: 'leaderboard',\r\n    leaderboard_empty: '\"March Madness\" else didn\\'t start',\r\n    isLoading: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nexport const contentReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_CONTENT_PENDING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case ActionTypes.LOAD_CONTENT_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_CONTENT_FULFILLED: {\r\n            const data = action.payload.data;\r\n            const result = formattingContentResponse(data);\r\n            return {\r\n                ...result,\r\n                response: data,\r\n                isLoading: false,\r\n                error: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    response: [],\r\n    error: false\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_USERS_PENDING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case ActionTypes.LOAD_USERS_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: data,\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_USERS_FULFILLED: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: action.payload.data.records,\r\n                error: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"src/redux/constants\";\r\n\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    response: null,\r\n    error: false\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // load user\r\n        case ActionTypes.LOAD_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case ActionTypes.LOAD_USER_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: null,\r\n                // response: data, // TODO if need errors rendering\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.LOAD_USER_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: action.payload.data,\r\n                error: false\r\n            };\r\n\r\n        // create user\r\n        case ActionTypes.CREATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case ActionTypes.CREATE_USER_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: null,\r\n                // response: data, // TODO if need errors rendering\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.CREATE_USER_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: action.payload.data,\r\n                error: false\r\n            };\r\n\r\n        // update user\r\n        case ActionTypes.UPDATE_USER_PENDING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case ActionTypes.UPDATE_USER_REJECTED: {\r\n            const { data } = action.payload.response || {};\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: null,\r\n                // response: data, // TODO if need errors rendering\r\n                error: true\r\n            };\r\n        }\r\n        case ActionTypes.UPDATE_USER_FULFILLED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                response: action.payload.data,\r\n                error: false\r\n            };\r\n\r\n        // logout\r\n        case ActionTypes.LOGOUT:\r\n            return {\r\n                isLoading: false,\r\n                response: null,\r\n                error: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { appReducer } from \"./app\";\r\nimport { preloaderReducer } from \"./preloader\";\r\nimport { playersReducer } from \"./players\";\r\nimport { contentReducer } from \"./content\";\r\nimport { usersReducer } from \"./users\";\r\nimport { userReducer } from \"./user\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    preloader: preloaderReducer,\r\n    players: playersReducer,\r\n    content: contentReducer,\r\n    users: usersReducer,\r\n    user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","export const selectAppIsInitialized = state => state.app.isInitialized;\r\n","export const selectIsUsersLoading = state => state.users.isLoading;\r\nexport const selectUsers = state => state.users.response;\r\n","export const selectEnableSelection = state => state.content.enable_selection;\r\n","import { selectUserSelection } from './user';\r\n\r\nexport const selectIsPlayersLoading = state => state.players.isLoading;\r\nexport const selectPlayers = state => state.players.players;\r\nexport const selectPlayersByUser = state => {\r\n    const players = selectPlayers(state);\r\n    const userSelection = selectUserSelection(state);\r\n\r\n    if (!userSelection || !userSelection.length) {\r\n        return []\r\n    }\r\n\r\n    return players.filter(player => userSelection.includes(player.id))\r\n};\r\n"],"sourceRoot":""}